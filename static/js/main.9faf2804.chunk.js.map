{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["AddTask","state","text","checked","date","Date","toISOString","slice","handleText","event","setState","target","value","handleDate","handleCheckbox","handleClick","length","props","add","alert","className","type","placeholder","this","onChange","id","htmlFor","min","onClick","React","Component","Task","task","active","style","important","color","change","delete","finish","finishDate","toLocaleString","TaskList","tasks","filter","done","activeTasks","map","key","doneTasks","App","counter","deleteTask","index","findIndex","splice","changeTaskStatus","forEach","getTime","addTask","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9faf2804.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../styles/AddTask.css\";\r\n\r\nclass AddTask extends React.Component {\r\n    state = {\r\n        text: \"\",\r\n        checked: false,\r\n        date: new Date().toISOString().slice(0, 10),\r\n    }\r\n    handleText = (event) => {\r\n        this.setState({\r\n            text: event.target.value\r\n        })\r\n    }\r\n    handleDate = (event) => {\r\n        this.setState({\r\n            date: event.target.value\r\n        })\r\n    }\r\n    handleCheckbox = () => {\r\n        this.setState({\r\n            checked: !this.state.checked\r\n        })\r\n    }\r\n    handleClick = () => {\r\n\r\n        if (this.state.text.length > 2) {\r\n            const add = this.props.add(this.state.text, this.state.date, this.state.checked);\r\n            if (add) {\r\n                this.setState({\r\n                    text: \"\",\r\n                    checked: false,\r\n                    date: new Date().toISOString().slice(0, 10),\r\n                })\r\n            }\r\n        } else {\r\n            alert(\"to short task name!\");\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"addForm\">\r\n                <input type=\"text\" placeholder=\"add task\" value={this.state.text} onChange={this.handleText} />\r\n                <input type=\"checkbox\" checked={this.state.checked} id=\"important\" onChange={this.handleCheckbox} />\r\n                <label htmlFor=\"important\">Priority</label>\r\n                <label htmlFor=\"date\">Final date</label>\r\n                <input type=\"date\" value={this.state.date} min={this.state.date} onChange={this.handleDate} />\r\n                <button onClick={this.handleClick}>Add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\nimport \"../styles/Task.css\";\r\n\r\nconst Task = (props) => {\r\n    const importantStyle = {\r\n        color: \"#5e9cff\",\r\n    }\r\n    if (props.task.active) {\r\n        return (\r\n            <div className=\"task\">\r\n                <p>\r\n                    <strong style={props.task.important ? importantStyle : null}>{props.task.text}</strong> - to <span>{props.task.date}</span>\r\n                </p>\r\n                <button className=\"done\" onClick={() => props.change(props.task.id)}>Done</button>\r\n                <button className=\"deleteTask\" onClick={() => props.delete(props.task.id)}>X</button>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        const finish = new Date(props.task.finishDate).toLocaleString();\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <strong>{props.task.text}</strong><em> to  </em>{props.task.date} - done in <span>{finish}</span>\r\n                    <button className=\"deleteTask\" onClick={() => props.delete(props.task.id)}>X</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task';\r\nimport \"../styles/TaskList.css\";\r\n\r\nconst TaskList = (props) => {\r\n\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n    const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change}></Task>);\r\n    const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change}></Task>);\r\n\r\n\r\n    return (\r\n        <div className=\"taskList\">\r\n            <div className=\"activeTasks\">\r\n                <h1>Tasks to be done</h1>\r\n                {activeTasks.length > 0 ? activeTasks : <p>Nothing to do :)</p>}\r\n            </div>\r\n            <div className=\"doneTasks\">\r\n                <h1>Tasks done <em>({done.length})</em></h1>\r\n                {doneTasks.slice(0, 5)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\nimport '../styles/App.css';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList';\n\n\nclass App extends React.Component {\n  counter = 0;\n  state = {\n    tasks: []\n  }\n  deleteTask = (id) => {\n    const tasks = [...this.state.tasks];\n    const index = tasks.findIndex(task => task.id === id);\n    tasks.splice(index, 1);\n    this.setState({\n      tasks\n    })\n  }\n  changeTaskStatus = (id) => {\n    const tasks = [...this.state.tasks];\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    })\n    this.setState({\n      tasks\n    })\n  }\n  addTask = (text, date, important) => {\n    const task = {\n      id: this.counter,\n      text,\n      date,\n      important,\n      active: true,\n      finishDate: new Date().getTime()\n\n    }\n    this.counter++;\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task]\n    }))\n    return true;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>TO DO LIST</h1>\n        <AddTask add={this.addTask}></AddTask>\n        <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus}></TaskList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}